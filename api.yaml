openapi: 3.0.0
info:
  description: Content service
  version: 1.0.0.2023-03-21
  title: Content service
  contact:
    name: API Support
    email: ingnoh@mz.co.kr
servers:
  - url: 'http://localhost:8080/{basePath}'
    description: 'localhost:8080'
    variables:
      basePath:
        enum:
          - v1
        default: v1
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
    LinkMethod:
      type: string
      description: HTTP Methods
      enum:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
    Link:
      type: object
      description: Link
      properties:
        href:
          type: string
          readOnly: true
        rel:
          type: string
          readOnly: true
        method:
          $ref: '#/components/schemas/LinkMethod'
    HttpEndpoint:
      type: object
      description: HTTP Endpoint
      properties:
        url:
          type: string
          description: url
        method:
          type: string
          description: 'HTTP Methods(GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS, CONNECT)'
        headers:
          type: array
          description: HTTP Header list
          items:
            type: object
            description: 'Key, value pair'
        body:
          type: object
          description: Body
    Root:
      type: object
      description: 공통 항목
      properties:
        links:
          type: array
          description: 관련 링크
          items:
            $ref: '#/components/schemas/Link'
          readOnly: true
    Pagination:
      type: object
      description: 페이징 정보
      properties:
        pageSize:
          type: integer
          description: 요청한 페이지 크기
          readOnly: true
        totalCount:
          type: integer
          format: int64
          description: 총 아이템 갯수
          readOnly: true
        nextCursor:
          type: string
          description: 해당 결과 목록의 마지막 아이템 식별자. 다음 목록 요청시 cursor parameter에 넘기면 해당 값을 기준으로 다음 목록을 구성.
          readOnly: true
    Content:
      type: object
      description: Content
      required:
        - id
        - title
        - originalTitle
        - thumbnail
        - genre
        - creator
        - releasedAt
        - type
      properties:
        id:
          type: string
          description: Content id
        title:
          type: string
          description: Title
        thumbnail:
          type: string
          description: Thumbnail
        originalTitle:
          type: string
          description: Original title
        genre:
          type: array
          description: Genre
          items:
            type: string
        creator:
          type: string
          description: Creator
        releasedAt:
          type: string
          description: Released at
        type:
          type: string
          description: Content type
          $ref: "#/components/schemas/ContentType"
        description:
          type: string
          description: Content description
    ContentType:
      type: string
      enum:
        - MOVIE
    ContentList:
      type: object
      allOf:
        - $ref: '#/components/schemas/Pagination'
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentSummary'
    ContentSummary:
      type: object
      description: User ID
      required:
        - id
        - title
        - thumbnail
      properties:
        id:
          type: string
          description: Content id
        title:
          type: string
          description: Title
        thumbnail:
          type: string
          description: Thumbnail
    UserId:
      type: object
      description: User ID
      required:
        - id
      properties:
        id:
          type: string
    User:
      type: object
      description: User 정보
      required:
        - id
      properties:
        id:
          type: string
          description: User ID
        externalId:
          type: string
          description: External ID
          readOnly: true
        name:
          type: string
          description: Name
          readOnly: true
        username:
          type: string
          description: Username
          readOnly: true
        email:
          type: string
          description: User email
          readOnly: true
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - INVITED
          readOnly: true
    CreatedResponse:
      type: object
      description: 리소스 생성 성공
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    UpdatedResponse:
      type: object
      description: 리소스 수정 성공
      properties:
        id:
          type: string
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    DeletedResponse:
      type: object
      description: 리소스 삭제 성공
      properties:
        id:
          type: string
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          readOnly: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
  parameters:
    Authorization:
      in: header
      name: Authorization
      schema:
        type: string
      required: true
      description: Authorization
    PageQuery:
      in: query
      name: page
      schema:
        type: integer
        format: int32
        default: 0
      description: Page index
    SizeQuery:
      in: query
      name: size
      schema:
        type: integer
        format: int32
        default: 20
      description: Page size
    CursorQuery:
      in: query
      name: cursor
      schema:
        type: string
      description: Cursor ID - Next ID, 해당 값을 사용하는 경우 page, sorts parameter는 무시됩니다.
  responses:
    CreatedResponse:
      description: 리소스가 생성 되었습니다
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResponse'
    UpdatedResponse:
      description: 리소스 수정 되었습니다.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatedResponse'
    DeletedResponse:
      description: 리소스가 삭제 되었습니다. 본문을 확인하세요. 때에 따라 쉽지는 않지만 복구가 가능합니다.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletedResponse'
    NoContentResponse:
      description: 리소스가 삭제 되었습니다.
    BadRequestResponse:
      description: 유효하지 않은 요청입니다. 본문을 확인하세요.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
    UnauthorizedResponse:
      description: 승인된 사용자가 아닙니다. 관리자에게 문의하세요.
    ForbiddenResponse:
      description: 권한이 없습니다. 관리자에게 문의하세요.
    NotFoundResponse:
      description: 리소스가 없습니다.
    CreatingConflictResponse:
      description: 리소스를 생성할 수 없습니다. 이미 생성 되었거나 동시에 사용할 수 없는 자원을 사용하려 했습니다. 본문을 확인하세요.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
    UpdatingConflictResponse:
      description: '리소스를 수정할 수 없습니다. 다른 수정 작업이 있었거나, 동시에 사용할 수 없는 자원을 사용하려 했습니다. 본문을 확인하세요.'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
    DeletingConflictResponse:
      description: '리소스를 삭제할 수 없습니다. 다른 수정 작업이 있었거나, 동시에 사용할 수 없는 자원을 사용하려 했습니다. 본문을 확인하세요.'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: content
    description: Content 관리
paths:
  /contents:
    get:
      tags:
        - content
      summary: 전체 Contents 목록 조회
      operationId: listContents
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/SizeQuery'
        - $ref: '#/components/parameters/CursorQuery'
        - name: type
          explode: false
          in: query
          description: Content Type
          schema:
            $ref: '#/components/schemas/ContentType'
        - name: sorts
          explode: false
          in: query
          description: Sorts
          schema:
            type: array
            items:
              type: string
              enum:
                - createdAt
                - createdAt asc
                - createdAt desc
                - updatedAt
                - updatedAt asc
                - updatedAt desc
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
  '/contents/{id}':
    get:
      tags:
        - content
      summary: Content 상세 조회
      operationId: getContent
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: id
          in: path
          description: Content ID
          required: true
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 성공
          content:
            application/json":
              schema:
                $ref: '#/components/schemas/Content'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'